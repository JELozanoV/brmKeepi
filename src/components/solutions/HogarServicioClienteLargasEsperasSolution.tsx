import React from 'react';
import BaseSolution from './BaseSolution';
import { ScriptSection, FAQSection, BenefitsSection } from './sections';

interface Props {
  onApplySolution: () => void;
}

const HogarServicioClienteLargasEsperasSolution: React.FC<Props> = ({ onApplySolution }) => {
  // Script base
  const scriptLines: { text: string; type: 'empathy' | 'action' | 'solution' | 'closing' }[] = [
    {
      text:
        'Lamento sinceramente el tiempo de espera que tuviste. Tu tiempo es valioso y estoy aqu√≠ para ayudarte de inmediato.',
      type: 'empathy',
    },
    {
      text: 'Perm√≠teme priorizar tu caso ahora mismo y resolver la raz√≥n de tu contacto sin m√°s demoras.',
      type: 'action',
    },
    {
      text:
        'Si te parece, avanzamos con la soluci√≥n propuesta o te presento alternativas claras para cerrar el requerimiento en esta llamada.',
      type: 'solution',
    },
    {
      text:
        'Te acompa√±ar√© hasta dejar la marcaci√≥n correspondiente y un resumen claro de lo acordado. ¬øContinuamos?',
      type: 'closing',
    },
  ];

  // Sin botones auxiliares ni modales mientras no sean necesarios

  const sections = [
    {
      id: 1,
      icon: 'üï∞Ô∏è',
      title: 'Gui√≥n de Retenci√≥n ‚Äî Largas esperas',
      content: (
        <div>
          <ScriptSection title="Gui√≥n recomendado" lines={scriptLines} />
        </div>
      )
    },
    {
      id: 2,
      icon: 'üìã',
      title: 'Acciones del Asesor',
      content: (
        <BenefitsSection
          benefits={[
            {
              icon: '‚ö°',
              title: 'Priorizar gesti√≥n en primer contacto',
              features: []
            },
            {
              icon: 'üîÑ',
              title: 'Mantener informado al cliente del avance',
              features: []
            },
            {
              icon: 'üìù',
              title: 'Dejar marcaci√≥n clara y completa en RR',
              features: []
            }
          ]}
        />
      )
    },
    {
      id: 3,
      icon: '‚ùì',
      title: 'Preguntas Frecuentes',
      content: (
        <FAQSection
          faqs={[
            {
              question: '¬øDebo transferir la llamada?',
              answer: 'Evita transferencias innecesarias. Prioriza soluci√≥n en primer contacto.'
            },
            {
              question: '¬øQu√© t√©rmino usar en el resumen?',
              answer: 'Usa siempre ‚Äúmarcaci√≥n‚Äù, nunca ‚Äúticket‚Äù.'
            },
            {
              question: '¬øQu√© hacer si el cliente prefiere ser contactado m√°s tarde?',
              answer: 'Ofrece programar devoluci√≥n en 24h y dejar la marcaci√≥n correspondiente en RR.'
            }
          ]}
        />
      )
    }
  ];

  return (
    <BaseSolution
      title="Soluci√≥n ‚Äî Largas esperas"
      icon="‚è≥"
      sections={sections}
      onSolutionApplied={onApplySolution}
      acceptButtonText="Cliente acepta continuar la gesti√≥n"
      rejectButtonText="Proceder con otra alternativa"
    />
  );
};

export default HogarServicioClienteLargasEsperasSolution;
